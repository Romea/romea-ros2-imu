<?xml version="1.0"?>
<robot name="imu" 
  xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="imu_sensor" params="xyz rpy parent_link rate type model name prefix mesh_visual">

    <xacro:property name="specifications_file" value="$(find romea_imu_description)/config/${type}_${model}_specifications.yaml" />
    <xacro:property name="geometry_file" value="$(find romea_imu_description)/config/${type}_${model}_geometry.yaml" />

    <xacro:property name="specifications" value="${load_yaml(specifications_file)}"/>
    <xacro:property name="geometry" value="${load_yaml(geometry_file)}"/>

    <xacro:property name="link_name" value="${prefix}${name}_link"/>
    <xacro:property name="joint_name" value="${prefix}${name}_joint"/>
    <xacro:property name="parent_link_name" value="${prefix}${parent_link}"/>
    <xacro:property name="data_topic" value="${name}/data"/>

    <xacro:property name="acc_noise_std" value="${1.57*specifications['acceleration_noise_density']*sqrt(rate)}"/>
    <xacro:property name="acc_drift_std" value="${specifications['acceleration_bias_stability_std']}"/>
    <xacro:property name="ang_noise_std" value="${1.57*specifications['angular_speed_noise_density']*sqrt(rate)}"/>
    <xacro:property name="ang_drift_std" value="${specifications['angular_speed_bias_stability_std']}"/>
    <xacro:property name="heading_std" value="${specifications['heading_std']}"/>

    <xacro:property name="mass" value="${geometry['mass']}"/>
    <xacro:property name="aabb_length" value="${geometry['aabb']['length']}"/>
    <xacro:property name="aabb_width" value="${geometry['aabb']['width']}"/>
    <xacro:property name="aabb_height" value="${geometry['aabb']['height']}"/>
    <xacro:property name="aabb_center" value="${geometry['aabb']['center']}"/>
    <xacro:property name="mesh_xyz" value="${geometry['mesh']['xyz']}"/>
    <xacro:property name="mesh_rpy" value="${geometry['mesh']['rpy']}"/>
    <xacro:property name="mesh_scale" value="${geometry['mesh']['scale']}"/>
    <xacro:property name="mesh_filename" value="${geometry['mesh']['filename']}"/>

    <link name="${link_name}">

       <inertial>
         <mass value="${mass}" />
         <origin xyz="${aabb_center[0]} ${aabb_center[1]} ${aabb_center[2]}" />
         <inertia ixx="${0.0833333 * mass * (aabb_width*aabb_width + aabb_height*aabb_height)}" ixy="0.0" ixz="0.0"
           iyy="${0.0833333 * mass * (aabb_height*aabb_height + aabb_length*aabb_length)}" iyz="0.0"
           izz="${0.0833333 * mass * (aabb_length*aabb_length + aabb_width*aabb_width)}" />
       </inertial>

       <visual>
         <xacro:if value="${mesh_visual == True}">
            <origin xyz="${mesh_xyz[0]} ${mesh_xyz[1]} ${mesh_xyz[2]}" rpy="${mesh_rpy[0]} ${mesh_rpy[1]} ${mesh_rpy[2]}" />
            <geometry>
              <mesh filename="${mesh_filename}" scale="${mesh_scale[0]} ${mesh_scale[1]} ${mesh_scale[2]}"/>
            </geometry>
         </xacro:if>
         <xacro:if value="${mesh_visual == False}">
            <origin xyz="${aabb_center[0]} ${aabb_center[1]} ${aabb_center[2]}" rpy="0 0 0" />
            <geometry>
              <box size="${aabb_length} ${aabb_width} ${aabb_height}" />
            </geometry>
         </xacro:if>
       </visual>

       <collision>
         <origin xyz="${aabb_center[0]} ${aabb_center[1]} ${aabb_center[2]}" rpy="0 0 0" />
         <geometry>
           <box size="${aabb_length} ${aabb_width} ${aabb_height}" />
         </geometry>
       </collision>

    </link>

    <joint name="${joint_name}" type="fixed">
      <axis xyz="0 0 1" />
      <origin xyz="${xyz}" rpy="${rpy}"/>
      <parent link="${parent_link_name}"/>
      <child link="${link_name}"/>
    </joint>

    <gazebo reference="${link_name}">
        <material>Gazebo/Orange</material>
        <sensor name="${name}" type="imu">
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <imu>
              <angular_velocity>
                <x>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>${ang_noise_std}</stddev>
                  </noise>
                </x>
                <y>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>${ang_noise_std}</stddev>
                  </noise>
                </y>
                <z>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>${ang_noise_std}</stddev>
                  </noise>
                </z>
              </angular_velocity>
              <linear_acceleration>
                <x>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>${acc_noise_std}</stddev>
                  </noise>
                </x>
                <y>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>${acc_noise_std}</stddev>
                  </noise>
                </y>
                <z>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>${acc_noise_std}</stddev>
                  </noise>
                </z>
              </linear_acceleration>
            </imu>
            <plugin name="${name}" filename="libgazebo_ros_imu_sensor.so">
                <ros>
                    <namespace>${prefix}${name}</namespace>
                    <remapping>~/out:=${name}/data</remapping>
                </ros>
                <initial_orientation_as_reference>false</initial_orientation_as_reference>
            </plugin>
        </sensor>
    </gazebo>

  </xacro:macro>
</robot>
